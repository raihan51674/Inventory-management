import axios from "axios";
import jsPDF from "jspdf";
import { useState } from "react";
import {
  FaCalendarAlt,
  FaDollarSign,
  FaFilePdf,
  FaHashtag,
  FaMobileAlt,
  FaPhone,
  FaUser,
} from "react-icons/fa";

const AddSalePage = () => {
  const [salesData, setSalesData] = useState({
    customerName: "",
    phone: "",
    quantity: 1,
    date: "",
    price: "",
    imei: "",
    notes: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setSalesData({ ...salesData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post("https://your-backend-api.com/api/sales", salesData);
      console.log("✅ Sale recorded:", response.data);
      alert("✅ Sale recorded successfully!");
    } catch (error) {
      console.error("❌ Error saving sale:", error);
      alert("❌ Failed to record sale.");
    }
  };

  const downloadPdf = () => {
    const doc = new jsPDF();

    // Header
    doc.setFontSize(20);
    doc.setTextColor(40, 40, 40);
    doc.text("Mobile Sale Receipt", 20, 20);

    doc.setFontSize(12);
    doc.setTextColor(100);
    doc.text("Thank you for your purchase!", 20, 28);

    // Separator
    doc.setDrawColor(0);
    doc.line(20, 32, 190, 32);

    // Sale details
    doc.setTextColor(0);
    doc.setFontSize(14);
    let y = 42;

    const fields = [
      { label: "Customer Name", value: salesData.customerName },
      { label: "Phone Number", value: salesData.phone },
      { label: "Quantity", value: salesData.quantity },
      { label: "Date", value: salesData.date },
      { label: "Total Price", value: `$${salesData.price}` },
      { label: "IMEI Number", value: salesData.imei },
      { label: "Additional Notes", value: salesData.notes || "N/A" },
    ];

    fields.forEach(({ label, value }) => {
      doc.setFont(undefined, "bold");
      doc.text(`${label}:`, 20, y);
      doc.setFont(undefined, "normal");
      doc.text(`${value}`, 70, y);
      y += 10;
    });

    // Footer
    doc.setDrawColor(0);
    doc.line(20, y + 4, 190, y + 4);
    doc.setFontSize(11);
    doc.setTextColor(130);
    doc.text("Generated by FahadShop • https://Fahad.com", 20, y + 12);

    // Save
    doc.save(`Sale-${salesData.customerName || "Customer"}.pdf`);
  };

  return (
    <div className="max-w-4xl mx-auto bg-white shadow-xl rounded-2xl p-8 mt-6 mb-12">
      <h2 className="text-3xl font-bold text-center text-blue-700 mb-8">
        📦 Add Mobile Sale
      </h2>

      <form className="grid grid-cols-1 md:grid-cols-2 gap-6" onSubmit={handleSubmit}>
        <div className="flex items-center gap-2">
          <FaUser className="text-blue-600" />
          <input
            name="customerName"
            placeholder="Customer Name"
            className="input-style"
            value={salesData.customerName}
            onChange={handleChange}
            required
          />
        </div>

        <div className="flex items-center gap-2">
          <FaPhone className="text-green-600" />
          <input
            name="phone"
            placeholder="Mobile Number"
            className="input-style"
            value={salesData.phone}
            onChange={handleChange}
            required
          />
        </div>

        <div className="flex items-center gap-2">
          <FaHashtag className="text-indigo-600" />
          <input
            type="number"
            name="quantity"
            placeholder="Quantity"
            className="input-style"
            value={salesData.quantity}
            onChange={handleChange}
            min="1"
          />
        </div>

        <div className="flex items-center gap-2">
          <FaCalendarAlt className="text-red-500" />
          <input
            type="date"
            name="date"
            className="input-style"
            value={salesData.date}
            onChange={handleChange}
            required
          />
        </div>

        <div className="flex items-center gap-2">
          <FaDollarSign className="text-yellow-600" />
          <input
            type="number"
            name="price"
            placeholder="Total Price"
            className="input-style"
            value={salesData.price}
            onChange={handleChange}
            required
          />
        </div>

        <div className="flex items-center gap-2">
          <FaMobileAlt className="text-purple-600" />
          <input
            name="imei"
            placeholder="IMEI Number"
            className="input-style"
            value={salesData.imei}
            onChange={handleChange}
            required
          />
        </div>

        <textarea
          name="notes"
          placeholder="Additional Notes..."
          className="input-style md:col-span-2 h-24 resize-none"
          value={salesData.notes}
          onChange={handleChange}
        />

        <button
          type="submit"
          className="md:col-span-2 bg-green-600 text-white py-3 rounded-lg font-semibold hover:bg-green-700 transition"
        >
          ✅ Confirm Sale
        </button>

        <button
          type="button"
          onClick={downloadPdf}
          className="md:col-span-2 flex items-center justify-center gap-2 bg-red-600 text-white py-3 rounded-lg font-semibold hover:bg-red-700 transition"
        >
          <FaFilePdf />
          📄 Download PDF
        </button>
      </form>
    </div>
  );
};

export default AddSalePage;
