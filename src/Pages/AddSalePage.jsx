import jsPDF from "jspdf";
import { useState } from "react";
import {
  FaCalendarAlt,
  FaDollarSign,
  FaHashtag,
  FaMobileAlt,
  FaPhone,
  FaUser,
} from "react-icons/fa";
import { Link } from "react-router";
import Swal from "sweetalert2";

const AddSalePage = () => {
  const [salesData, setSalesData] = useState({});
  const [paymentType, setPaymentType] = useState("full");
  const [partialAmount, setPartialAmount] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();
    const form = e.target;
    const data = Object.fromEntries(new FormData(form).entries());

    const finalData = {
      ...data,
      paymentType,
      partialAmount: paymentType === "partial" ? partialAmount : data.price,
      dueAmount:
        paymentType === "partial"
          ? Number(data.price) - Number(partialAmount)
          : 0,
    };

    setSalesData(finalData);

    try {
      const res = await fetch("http://localhost:3000/addSale", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(finalData),
      });

      if (!res.ok) throw new Error("Failed to add sale");

      const resData = await res.json();
      console.log("Sale added successfully:", resData);

      generatePdf(finalData);

      Swal.fire({
        icon: "success",
        title: "Sale Confirmed!",
        text: "The sale was added successfully and the PDF has been downloaded.",
        confirmButtonColor: "#22c55e",
      });

      form.reset();
      setPaymentType("full");
      setPartialAmount("");
      setSalesData({});
    } catch (err) {
      console.error("Error:", err);
    }
  };

  const generatePdf = (data) => {
    const doc = new jsPDF();
    doc.setFontSize(20).setTextColor(40).text("Mobile Sale Receipt", 20, 20);
    doc
      .setFontSize(12)
      .setTextColor(100)
      .text("Thank you for your purchase!", 20, 28);
    doc.line(20, 32, 190, 32);

    let y = 42;
    const fields = [
      { label: "Customer Name", value: data.customerName },
      { label: "Phone Number", value: data.phone },
      { label: "Quantity", value: data.quantity },
      { label: "Date", value: data.date },
      { label: "IMEI Number", value: data.imei },
      { label: "Total Price", value: `$${data.price}` },
      { label: "Payment Type", value: data.paymentType },
      {
        label: "Paid Amount",
        value: `$${data.partialAmount || data.price}`,
      },
      {
        label: "Due Amount",
        value: `$${data.dueAmount || 0}`,
      },
      { label: "Additional Notes", value: data.notes || "N/A" },
    ];

    fields.forEach(({ label, value }) => {
      doc.setFont(undefined, "bold").text(`${label}:`, 20, y);
      doc.setFont(undefined, "normal").text(`${value}`, 70, y);
      y += 10;
    });

    doc.line(20, y + 4, 190, y + 4);
    doc.setFontSize(11).setTextColor(130);
    doc.text("Generated by Rahad-Shop ‚Ä¢ https://Rahad.com", 20, y + 12);
    doc.save(`Sale-${data.customerName || "Customer"}.pdf`);
  };

  return (
    <div className="max-w-4xl mx-auto p-12 mt-12 mb-20 rounded-3xl bg-gradient-to-tr from-indigo-50 via-purple-50 to-pink-50 shadow-2xl border border-indigo-200 backdrop-blur-sm">
      <h2 className="text-4xl font-extrabold text-center text-transparent bg-clip-text bg-gradient-to-r from-indigo-700 via-purple-800 to-pink-700 mb-4 tracking-tight">
        üì± Add Mobile Sale
      </h2>

      <div className="flex justify-end mb-8">
        <Link
          to="/userInfo"
          className="text-sm px-5 py-2 rounded-full bg-indigo-100 text-indigo-700 font-semibold hover:bg-indigo-200 transition"
        >
          üîç View Customer Details
        </Link>
      </div>

      <form
        onSubmit={handleSubmit}
        className="grid grid-cols-1 md:grid-cols-2 gap-8"
      >
        {[
          {
            icon: <FaUser />,
            name: "customerName",
            placeholder: "Customer Name",
          },
          { icon: <FaPhone />, name: "phone", placeholder: "Phone Number" },
          {
            icon: <FaHashtag />,
            name: "quantity",
            placeholder: "Quantity",
            type: "number",
            min: 1,
          },
          {
            icon: <FaCalendarAlt />,
            name: "date",
            placeholder: "Sale Date",
            type: "date",
          },
          {
            icon: <FaDollarSign />,
            name: "price",
            placeholder: "Total Price",
            type: "number",
          },
          { icon: <FaMobileAlt />, name: "imei", placeholder: "IMEI Number" },
        ].map((field, i) => (
          <div
            key={i}
            className="relative rounded-xl shadow-md bg-white border border-gray-200 focus-within:ring-4 focus-within:ring-indigo-300 transition"
          >
            <div className="absolute top-3 left-3 text-indigo-400">{field.icon}</div>
            <input
              name={field.name}
              placeholder={field.placeholder}
              type={field.type || "text"}
              min={field.min}
              required
              className="pl-12 pr-4 py-3 w-full rounded-xl border-none focus:outline-none text-indigo-900 font-medium text-lg bg-transparent"
            />
          </div>
        ))}

        <div className="md:col-span-2">
          <label className="font-semibold text-indigo-700 mb-3 block text-lg select-none">
            Payment Type
          </label>
          <div className="flex gap-8 text-indigo-800 font-semibold">
            {["full", "partial"].map((type) => (
              <label
                key={type}
                className="flex items-center gap-3 cursor-pointer select-none"
              >
                <input
                  type="radio"
                  value={type}
                  checked={paymentType === type}
                  onChange={() => setPaymentType(type)}
                  className="accent-indigo-500 w-5 h-5"
                />
                <span className="capitalize">{type} payment</span>
              </label>
            ))}
          </div>
        </div>

        {paymentType === "partial" && (
          <div className="md:col-span-2">
            <input
              type="number"
              placeholder="Enter Partial Payment Amount"
              value={partialAmount}
              onChange={(e) => setPartialAmount(e.target.value)}
              required
              className="w-full py-3 px-5 rounded-xl border border-indigo-300 focus:outline-none focus:ring-4 focus:ring-indigo-400 text-indigo-900 font-semibold text-lg transition"
            />
          </div>
        )}

        <textarea
          name="notes"
          placeholder="Additional Notes..."
          className="md:col-span-2 h-28 resize-none px-5 py-4 rounded-xl border border-indigo-300 focus:outline-none focus:ring-4 focus:ring-indigo-400 text-indigo-900 font-semibold text-lg transition"
        />

        <button
          type="submit"
          className="md:col-span-2 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-emerald-600 hover:to-green-500 text-white py-4 rounded-2xl font-extrabold shadow-lg hover:shadow-2xl transform hover:scale-[1.03] transition duration-300"
        >
          ‚úÖ Confirm Sale & Download PDF
        </button>
      </form>
    </div>
  );
};

export default AddSalePage;
